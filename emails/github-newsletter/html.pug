mixin repoList(repos)
    each repo in repos
        p
            a(href=`${repo.url}`) #{repo.name}
            small.badge(style={"border-color": '#9e9e9e', color: '#333'}) #{new Date(repo.createdAt).toLocaleString("en-US", { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric' })}
        small #{repo.description || 'No description provided'}
        p
            small.badge(style={"background-color": repo.primaryLanguage ? repo.primaryLanguage.color : '#333'}) #{repo.primaryLanguage ? repo.primaryLanguage.name.toLowerCase() : 'none'}
            if repo.isFork
                small.badge(style={"background-color": '#333'}) fork

mixin indicator(label, value)
    div(style={"text-align": "center"})
        h2 #{value}
        small #{label}

style(type='text/css').
    @import url('https://fonts.googleapis.com/css?family=Roboto');

    body {
         font-family: 'Arial', sans-serif;
    }

    a, a:visited {
        text-decoration: none;
        color: #5c7cff;
    }

    .badge {
        color: #ffffff;
        padding: 3px 5px;
        border-radius: 5px;
    }
    .badge:not(:first-child) {
        margin-left: 5px;
    }


body
    div(style={display: 'flex', 'justify-content': 'space-around'})
        img(src=`${avatarUrl}`)
        +indicator("Members", totalMembers)
        +indicator("Private Repos", totalPrivateRepos)
        +indicator("Public Repos", totalPublicRepos)

    //p Total Members: #{totalMembers}
    //p Total Private Repos: #{totalPrivateRepos}
    //p Total Public Repos: #{totalPublicRepos}

    h2 Recently updated
    +repoList(recentlyUpdatedRepos)

    h2 Trending
    +repoList(mostStarredRepos)

    h2 Recently created private
    +repoList(privateRepos)

    h2 Recently created public
    +repoList(publicRepos)